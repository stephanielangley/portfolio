name: ci

on:
  push:
    branches: main

jobs:
  api-build:
    runs-on: steph-1
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CITOKEN }}

      - uses: docker/build-push-action@v2
        env:
          CONTAINER: ghcr.io/${{ github.repository }}/api
        with:
          context: api
          file: api/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.CONTAINER }}:latest
          cache-from: type=registry,ref=${{ env.CONTAINER }}:buildcache
          cache-to: type=registry,ref=${{ env.CONTAINER }}:buildcache,mode=max

  api-deploy:
    needs: api-build
    runs-on: steph-1
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CITOKEN }}
      - name: Pull
        env:
          STRAVACLIENTID: ${{secrets.STRAVACLIENTID}}
          STRAVAATHLETEID: ${{secrets.STRAVAATHLETEID}}
          STRAVASECRET: ${{secrets.STRAVASECRET}}
          STRAVAAUTHURL: ${{secrets.STRAVAAUTHURL}}
          CONNECTIONSTRINGS__DEFAULTCONNECTION: ${{secrets.CONNECTIONSTRINGS__DEFAULTCONNECTION}}
        run: |
          cd api
          docker compose pull
          docker compose up -d
          docker image prune -f

  frontend:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-

      - name: NPM Install Frontend
        working-directory: ./frontend
        shell: bash
        run: npm ci --cache ~/.npm --prefer-offline

      - name: NPM Build
        working-directory: ./frontend
        shell: bash
        run: npm run build

      - name: Install azcopy
        shell: bash
        run: |
          curl -L https://aka.ms/downloadazcopy-v10-linux | tar -zxf -
          sudo mv ./azcopy_linux_amd64_*/azcopy /usr/bin/
          azcopy --version

      - name: Sync files
        working-directory: ./frontend
        shell: bash
        run: azcopy sync dist $STORAGE_SAS --recursive
        env:
          STORAGE_SAS: ${{ secrets.STORAGE_SAS }}
